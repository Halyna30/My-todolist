{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA4DeA,MA1Df,SAAkBC,GAAQ,IAAD,EACGC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD5C,mBAChBC,EADgB,KACTC,EADS,KAGjBC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAAAC,GACnBP,EAASO,EAAEC,OAAOV,QAapB,OACE,8BACE,sBAAMW,UAAU,YAAYC,SAZX,SAAAH,GACnBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGRC,EAAS,KAIP,SACGL,EAAME,KACL,qCACE,uBACEoB,KAAK,OACLC,YAAY,mBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,kBACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,mBAAlB,uBAGF,qCACE,uBACEQ,KAAK,OACLC,YAAY,aACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,aACVW,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,cAAlB,8B,eCPGa,MAxCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACrC9B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAHoD,mBACtDD,EADsD,KAChD8B,EADgD,KAc7D,OAAI9B,EAAKe,GACA,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATV,SAAAZ,GACnB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACNf,GAAI,KACJd,MAAO,QAQJyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBACErB,UAAWoB,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACE,cAAC,IAAD,CACEuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEZ,cAAC,IAAD,CACEuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAClDP,UAAU,mBAZTqB,OC0BIG,MAhDf,WAAqB,IAAD,EACQrC,mBAAS,IADjB,mBACX2B,EADW,KACJW,EADI,KAkClB,OACE,gCACE,4DACA,cAAC,EAAD,CAAUxB,SAlCE,SAAAmB,GACd,GAAKA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAApC,CAGA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OA6BP,cAAC,EAAD,CACEb,MAAOA,EACPC,aA5Be,SAAAZ,GACnB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAI3B,OAHIA,EAAKjB,KAAOA,IACdiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAsBLZ,WAZa,SAAAb,GACjB,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,KAAOA,KACxDsB,EAASI,IAWLZ,WApBa,SAACc,EAAQC,GACrBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAG5CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCnBxDC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCDNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a668f0b.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput('');\n  };\n  return (\n    <div>\n      <form className=\"todo-form\" onSubmit={handleSubmit}>\n        {props.edit ? (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Update your todo\"\n              value={input}\n              name=\"text\"\n              className=\"todo-input edit\"\n              onChange={handleChange}\n              ref={inputRef}\n            />\n            <button className=\"todo-button edit\">Update</button>\n          </>\n        ) : (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"Add a todo\"\n              value={input}\n              name=\"text\"\n              className=\"todo-input\"\n              onChange={handleChange}\n              ref={inputRef}\n            />\n            <button className=\"todo-button\">Add todo</button>\n          </>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport TodoForm from './TodoForm';\n\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: '',\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: '',\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className=\"icons\">\n        <RiCloseCircleLine\n          onClick={() => removeTodo(todo.id)}\n          className=\"delete-icon\"\n        />\n        <TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className=\"edit-icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  return (\n    <div>\n      <h1>What's the Plan for Today?</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}